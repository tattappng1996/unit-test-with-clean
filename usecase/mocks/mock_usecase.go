// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/usecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	usecase "unit-test-with-clean/usecase"
)

// MockUsecase is a mock of Usecase interface
type MockUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseMockRecorder
}

// MockUsecaseMockRecorder is the mock recorder for MockUsecase
type MockUsecaseMockRecorder struct {
	mock *MockUsecase
}

// NewMockUsecase creates a new mock instance
func NewMockUsecase(ctrl *gomock.Controller) *MockUsecase {
	mock := &MockUsecase{ctrl: ctrl}
	mock.recorder = &MockUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUsecase) EXPECT() *MockUsecaseMockRecorder {
	return m.recorder
}

// TestNaja mocks base method
func (m *MockUsecase) TestNaja(arg0 usecase.TestcaseStruct) usecase.Expect {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestNaja", arg0)
	ret0, _ := ret[0].(usecase.Expect)
	return ret0
}

// TestNaja indicates an expected call of TestNaja
func (mr *MockUsecaseMockRecorder) TestNaja(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestNaja", reflect.TypeOf((*MockUsecase)(nil).TestNaja), arg0)
}
